#
# PX4 bootloader build rules for STM32F4 targets.
#

OPENOCD		?= openocd

JTAGCONFIG ?= interface/olimex-jtag-tiny.cfg
#JTAGCONFIG ?= interface/jtagkey-tiny.cfg

#px4_dir=/home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware
#px4_dir=/home/ocean/code/dream-v1.5-4.12/ardupilot/modules/PX4Firmware
px4_dir=/home/ocean/code/dream-v1.5-4.12/ardupilot/modules/PX4Firmware
# 5 seconds / 5000 ms default delay
PX4_BOOTLOADER_DELAY	?= 5000

SRCS		 = stm32.S

FLAGS		+= -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 \
       -DTARGET_HW_$(TARGET_HW) \
       -T$(LINKER_FILE) \
        $(EXTRAFLAGS)

		
ELF		 = $(TARGET_FILE_NAME).elf
BINARY		 = $(TARGET_FILE_NAME).bin

all:		Encrypt.data boot.data $(BINARY)


Encrypt.data:
#	cp data/Encrypt.bin Encrypt.data
	cp Encrypt.bin Encrypt.data
	
boot.data:
	cp px4fmuv4_bl.bin boot.data
	
$(ELF):		$(SRCS) $(MAKEFILE_LIST)
	$(CC) -o $@ $(SRCS) $(FLAGS)

$(BINARY):	$(ELF)
	$(OBJCOPY) -O binary $(ELF) $(BINARY)
	mkdir -p bl
#	rm /home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware/Build/px4fmu-v4_APM.build/bl_update_board*
#	cp $(BINARY) /home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware/Build/px4fmu-v4_APM.build/
#	rm $(px4_dir)/Build/px4fmu-v4_APM.build/bl_update_board*
	cp $(BINARY) $(px4_dir)/Build/px4fmu-v4_APM.build/
	mv $(BINARY) bl/
	mv $(ELF) bl/
#	cp ../px4fmuv4_board_board.bin bl/
	rm *.data *.bin
#	/home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware//Tools/px_mkfw.py --prototype /home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware/Images//px4fmu-v4.prototype --git_identity /home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware/ --image /home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware/Build/px4fmu-v4_APM.build/bl_update_board.bin > /home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware/Build/px4fmu-v4_APM.build/bl_update_board.px4
#	cp /home/ocean/dream-v1.5-4.12/ardupilot/modules/PX4Firmware/Build/px4fmu-v4_APM.build/bl_update_board.px4 ./
	$(px4_dir)//Tools/px_mkfw.py --prototype $(px4_dir)/Images//px4fmu-v4.prototype --git_identity $(px4_dir)/ --image $(px4_dir)/Build/px4fmu-v4_APM.build/bl_update_board.bin > $(px4_dir)/Build/px4fmu-v4_APM.build/bl_update_board.px4
	cp $(px4_dir)/Build/px4fmu-v4_APM.build/bl_update_board.px4 ./bl/
#	cp /home/ocean/code/px4fmu-v4_APM.px4 ./
	cp $(px4_dir)/Build/px4fmu-v4_APM.build/firmware.px4 ./bl/px4fmu-v4_APM.px4


#	mv $(BINARY) ../
#	mv $(ELF) ../
#	rm *.data *.bin

#upload: all flash flash-bootloader
upload: all flash-bootloader

flash-bootloader:
	$(OPENOCD) --search ../px4_bootloader -f $(JTAGCONFIG) -f stm32f4x.cfg -c init -c "reset halt" -c "flash write_image erase $(BINARY) 0x08000000" -c "reset run" -c shutdown

# Use to upload to a stm32f4-discovery devboard, requires the latest version of openocd (from git)
# build openocd with "cd openocd; ./bootstrap; ./configure --enable-maintainer-mode --enable-stlink"
upload-discovery: 
	$(OPENOCD) --search ../px4_bootloader -f board/stm32f4discovery.cfg -c init -c "reset halt" -c "flash probe 0" -c "stm32f2x mass_erase 0" -c "flash write_image erase $(BINARY) 0x08000000" -c "reset" -c shutdown
